(function(f){if(typeof exports==="object"&&typeof module!=="undefined"){module.exports=f()}else if(typeof define==="function"&&define.amd){define([],f)}else{var g;if(typeof window!=="undefined"){g=window}else if(typeof global!=="undefined"){g=global}else if(typeof self!=="undefined"){g=self}else{g=this}g.VirtualHost = f()}})(function(){var define,module,exports;return (function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){
'use strict';

var hasOwn = Object.prototype.hasOwnProperty;
var toStr = Object.prototype.toString;

var isArray = function isArray(arr) {
	if (typeof Array.isArray === 'function') {
		return Array.isArray(arr);
	}

	return toStr.call(arr) === '[object Array]';
};

var isPlainObject = function isPlainObject(obj) {
	if (!obj || toStr.call(obj) !== '[object Object]') {
		return false;
	}

	var hasOwnConstructor = hasOwn.call(obj, 'constructor');
	var hasIsPrototypeOf = obj.constructor && obj.constructor.prototype && hasOwn.call(obj.constructor.prototype, 'isPrototypeOf');
	// Not own constructor property must be Object
	if (obj.constructor && !hasOwnConstructor && !hasIsPrototypeOf) {
		return false;
	}

	// Own properties are enumerated firstly, so to speed up,
	// if last one is own, then all properties are own.
	var key;
	for (key in obj) { /**/ }

	return typeof key === 'undefined' || hasOwn.call(obj, key);
};

module.exports = function extend() {
	var options, name, src, copy, copyIsArray, clone;
	var target = arguments[0];
	var i = 1;
	var length = arguments.length;
	var deep = false;

	// Handle a deep copy situation
	if (typeof target === 'boolean') {
		deep = target;
		target = arguments[1] || {};
		// skip the boolean and the target
		i = 2;
	}
	if (target == null || (typeof target !== 'object' && typeof target !== 'function')) {
		target = {};
	}

	for (; i < length; ++i) {
		options = arguments[i];
		// Only deal with non-null/undefined values
		if (options != null) {
			// Extend the base object
			for (name in options) {
				src = target[name];
				copy = options[name];

				// Prevent never-ending loop
				if (target !== copy) {
					// Recurse if we're merging plain objects or arrays
					if (deep && copy && (isPlainObject(copy) || (copyIsArray = isArray(copy)))) {
						if (copyIsArray) {
							copyIsArray = false;
							clone = src && isArray(src) ? src : [];
						} else {
							clone = src && isPlainObject(src) ? src : {};
						}

						// Never move original objects, clone them
						target[name] = extend(deep, clone, copy);

					// Don't bring in undefined values
					} else if (typeof copy !== 'undefined') {
						target[name] = copy;
					}
				}
			}
		}
	}

	// Return the modified object
	return target;
};

},{}],2:[function(require,module,exports){
/*
  Copyright 2013-2014, Marten de Vries

  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at

  http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
*/

"use strict";

module.exports = function nodify(promise, callback) {
  if (typeof callback === "function") {
    promise.then(function (resp) {
      callback(null, resp);
    }, function (err) {
      callback(err, null);
    });
  }
};

},{}],3:[function(require,module,exports){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

'use strict';

// If obj.hasOwnProperty has been overridden, then calling
// obj.hasOwnProperty(prop) will break.
// See: https://github.com/joyent/node/issues/1707
function hasOwnProperty(obj, prop) {
  return Object.prototype.hasOwnProperty.call(obj, prop);
}

module.exports = function(qs, sep, eq, options) {
  sep = sep || '&';
  eq = eq || '=';
  var obj = {};

  if (typeof qs !== 'string' || qs.length === 0) {
    return obj;
  }

  var regexp = /\+/g;
  qs = qs.split(sep);

  var maxKeys = 1000;
  if (options && typeof options.maxKeys === 'number') {
    maxKeys = options.maxKeys;
  }

  var len = qs.length;
  // maxKeys <= 0 means that we should not limit keys count
  if (maxKeys > 0 && len > maxKeys) {
    len = maxKeys;
  }

  for (var i = 0; i < len; ++i) {
    var x = qs[i].replace(regexp, '%20'),
        idx = x.indexOf(eq),
        kstr, vstr, k, v;

    if (idx >= 0) {
      kstr = x.substr(0, idx);
      vstr = x.substr(idx + 1);
    } else {
      kstr = x;
      vstr = '';
    }

    k = decodeURIComponent(kstr);
    v = decodeURIComponent(vstr);

    if (!hasOwnProperty(obj, k)) {
      obj[k] = v;
    } else if (isArray(obj[k])) {
      obj[k].push(v);
    } else {
      obj[k] = [obj[k], v];
    }
  }

  return obj;
};

var isArray = Array.isArray || function (xs) {
  return Object.prototype.toString.call(xs) === '[object Array]';
};

},{}],4:[function(require,module,exports){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

'use strict';

var stringifyPrimitive = function(v) {
  switch (typeof v) {
    case 'string':
      return v;

    case 'boolean':
      return v ? 'true' : 'false';

    case 'number':
      return isFinite(v) ? v : '';

    default:
      return '';
  }
};

module.exports = function(obj, sep, eq, name) {
  sep = sep || '&';
  eq = eq || '=';
  if (obj === null) {
    obj = undefined;
  }

  if (typeof obj === 'object') {
    return map(objectKeys(obj), function(k) {
      var ks = encodeURIComponent(stringifyPrimitive(k)) + eq;
      if (isArray(obj[k])) {
        return map(obj[k], function(v) {
          return ks + encodeURIComponent(stringifyPrimitive(v));
        }).join(sep);
      } else {
        return ks + encodeURIComponent(stringifyPrimitive(obj[k]));
      }
    }).join(sep);

  }

  if (!name) return '';
  return encodeURIComponent(stringifyPrimitive(name)) + eq +
         encodeURIComponent(stringifyPrimitive(obj));
};

var isArray = Array.isArray || function (xs) {
  return Object.prototype.toString.call(xs) === '[object Array]';
};

function map (xs, f) {
  if (xs.map) return xs.map(f);
  var res = [];
  for (var i = 0; i < xs.length; i++) {
    res.push(f(xs[i], i));
  }
  return res;
}

var objectKeys = Object.keys || function (obj) {
  var res = [];
  for (var key in obj) {
    if (Object.prototype.hasOwnProperty.call(obj, key)) res.push(key);
  }
  return res;
};

},{}],5:[function(require,module,exports){
'use strict';

exports.decode = exports.parse = require('./decode');
exports.encode = exports.stringify = require('./encode');

},{"./decode":3,"./encode":4}],6:[function(require,module,exports){
/*
  Copyright 2014, Marten de Vries

  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at

  http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
*/

"use strict";

function PouchPluginError(opts) {
  this.status = opts.status;
  this.name = opts.name;
  this.message = opts.message;
  this.error = true;
  this.stack = (new Error()).stack;
}

PouchPluginError.prototype.toString = function () {
  return JSON.stringify({
    status: this.status,
    name: this.name,
    message: this.message
  });
};

module.exports = PouchPluginError;

},{}],7:[function(require,module,exports){
/*
  Copyright 2014, Marten de Vries

  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at

  http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
*/

"use strict";

var PouchPluginError = require("pouchdb-plugin-error");
var extend = require("extend");
var querystring = require("querystring");

module.exports = function route(PouchDB, req, options) {
  //Mapping urls to PouchDB/plug-in functions. Based on:
  //http://docs.couchdb.org/en/latest/http-api.html
  if (req.path[0] === "..") {
    throw404(); //coverage: ignore
  }
  if (req.query) {
    for (var key in req.query) {
      // Object returned by the `querystring` module on Node doesn't have the
      // `hasOwnProperty()` method for some reasons, so we can't just do
      // `req.query.hasOwnProperty()`.
      if (Object.prototype.hasOwnProperty.call(req.query, key)) {
        try {
          req.query[key] = JSON.parse(req.query[key]);
        } catch (e) {
          //don't replace the original value
        }
      }
    }
  }
  var rootFunc = {
    "_all_dbs": (PouchDB.allDbs || throw404).bind(PouchDB),
    "_replicate": callWithBody.bind(null, PouchDB, req, function (body) {
      return this.replicate(body.source, body.target, body);
    }),
    "_session": function () {
      if (!PouchDB.seamlessSession) {
        throw404();
      }
      return ({
        GET: PouchDB.seamlessSession.bind(PouchDB),
        POST: function () {
          var data = parseBody(req);
          return PouchDB.seamlessLogIn(data.name, data.password);
        },
        DELETE: PouchDB.seamlessLogOut.bind(PouchDB)
      }[req.method] || throw405.bind(null, req))();
    }
  }[req.path[0]];
  if (rootFunc) {
    return rootFunc();
  }
  var db = new PouchDB(decodeURIComponent(req.path[0]));
  var localCallWithBody = callWithBody.bind(null, db, req);
  if (req.path.length === 1) {
    var post = options.withValidation ? db.validatingPost : db.post;
    var defaultDBFunc = db.info.bind(db);
    return ({
      DELETE: db.destroy.bind(db),
      POST: localCallWithBody.bind(null, post, crudOpts(req, options))
    }[req.method] || defaultDBFunc)();
  }

  var localRouteCRUD = routeCRUD.bind(null, db, req, options);
  var defaultFunc = localRouteCRUD.bind(null, req.path[1], req.path.slice(2));
  var bulkDocs = options.withValidation ? db.validatingBulkDocs : db.bulkDocs;
  return ({
    "_all_docs": db.allDocs.bind(db, req.query),
    "_bulk_docs": localCallWithBody.bind(null, bulkDocs, crudOpts(req, options)),
    "_changes": db.changes.bind(db, req.query),
    "_compact": db.compact.bind(db),
    "_design": function () {
      var url = req.path[2] + "/" + req.path.slice(4).join("/");
      var subDefaultFunc = localRouteCRUD.bind(null, "_design/" + req.path[2], req.path.slice(3));
      return ({
        "_list": (db.list || throw404).bind(db, url, req),
        "_rewrite": function () {
          var newReq = extend({}, req);
          delete newReq.path;
          return (db.rewrite || throw404).bind(db, url, newReq)();
        },
        "_search": (db.search || throw404).bind(db, url, req.query),
        "_show": (db.show || throw404).bind(db, url, req),
        "_spatial": (db.spatial || throw404).bind(db, url, req.query),
        "_update": (db.update || throw404).bind(db, url, req),
        "_view": db.query.bind(db, url, req.query)
      }[req.path[3]] || subDefaultFunc)();
    },
    "_local": localRouteCRUD.bind(null, "_local/" + req.path[2], req.path.slice(3)),
    "_revs_diff": localCallWithBody.bind(null, db.revsDiff),
    "_security": function () {
      return ({
        GET: localCallWithBody.bind(null, db.getSecurity),
        PUT: localCallWithBody.bind(null, db.putSecurity)
      }[req.method] || throw405.bind(null, req))();
    },
    "_temp_view": localCallWithBody.bind(null, db.query, req.query),
    "_view_cleanup": db.viewCleanup.bind(db, req.query)
  }[req.path[1]] || defaultFunc)();
};

function crudOpts(req, options) {
  return extend({}, req.query, options);
}

function callWithBody(thisObj, req, func) {
  var args = Array.prototype.slice.call(arguments, 3);
  args.unshift(parseBody(req));
  return func.apply(thisObj, args);
}

function parseBody(req) {
  try {
    return JSON.parse(req.body);
  } catch (err) {
    return querystring.parse(req.body);
  }
}

function routeCRUD(db, req, options, docId, remainingPath) {
  var opts = crudOpts(req, options);
  docId = decodeURIComponent(docId);
  function callAttachment(isPut) {
    var funcs;
    var args = [docId, remainingPath[0], req.query.rev];
    if (isPut) {
      args.push(req.body);
      args.push(req.headers["Content-Type"]);

      funcs = {
        true: db.validatingPutAttachment,
        false: db.putAttachment
      };
    } else {
      funcs = {
        true: db.validatingRemoveAttachment,
        false: db.removeAttachment
      };
    }
    if (options.withValidation) {
      args.push(opts);
    }
    return funcs[options.withValidation].apply(db, args);
  }

  //document level
  if (remainingPath.length === 0) {
    var localCallWithBody = callWithBody.bind(null, db, req);
    var put = options.withValidation ? db.validatingPut : db.put;
    var remove = options.withValidation ? db.validatingRemove : db.remove;
    return ({
      GET: function () {
        return db.get(docId, opts);
      },
      PUT: localCallWithBody.bind(null, put, opts),
      DELETE: remove.bind(db, docId, opts.rev)
    }[req.method] || throw405.bind(null, req))();
  }
  //attachment level
  return ({
    GET: function () {
      return db.getAttachment(docId, remainingPath.join("/"), opts);
    },
    PUT: callAttachment.bind(null, true),
    DELETE: callAttachment.bind(null, false),

  }[req.method] || throw405.bind(null, req))();
}

function throw404() {
  throw new PouchPluginError({status: 404, name: "not_found", message: "missing"});
}

function throw405(req) {
  throw new PouchPluginError({
    status: 405,
    name: "method_not_allowed",
    message: "method '" + req.method + "' not allowed."
  });
}

},{"extend":1,"pouchdb-plugin-error":6,"querystring":5}],8:[function(require,module,exports){
/*
	Copyright 2014, Marten de Vries

	Licensed under the Apache License, Version 2.0 (the "License");
	you may not use this file except in compliance with the License.
	You may obtain a copy of the License at

	http://www.apache.org/licenses/LICENSE-2.0

	Unless required by applicable law or agreed to in writing, software
	distributed under the License is distributed on an "AS IS" BASIS,
	WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	See the License for the specific language governing permissions and
	limitations under the License.
*/

"use strict";

var nodify = require('promise-nodify');
var route = require('pouchdb-route');
var querystring = require('querystring');

module.exports = function (PouchDB) {
  PouchDB.virtualHost = function (req, vhosts, options, callback) {
    if (typeof options === 'function') {
      callback = options;
      options = {};
    }
    if (typeof options === 'undefined') {
      options = {};
    }

    var url = PouchDB.resolveVirtualHost(req, vhosts);
    var path = url.split("?")[0];
    var qs = url.split("?")[1];
    var newReq = {
      path: splitUrl(path),
      query: querystring.parse(qs),
      raw_path: req.raw_path,
      requested_path: splitUrl(req.raw_path),
      method: 'GET'
    };
    var promise = route(PouchDB, newReq, options);

    nodify(promise, callback);
    return promise;
  };

  PouchDB.resolveVirtualHost = function (req, vhosts) {
    var headers = req.headers || {};
    var hostHeader = splitHost(headers.Host || headers.host || '');
    var match, targetParts;
    for (var unsplittedVHost in vhosts) {
      /* istanbul ignore else */
      if (vhosts.hasOwnProperty(unsplittedVHost)) {
        var vhost = splitHost(unsplittedVHost);
        targetParts = splitUrl(vhosts[unsplittedVHost]);

        match = findMatch(hostHeader, vhost);
        if (match) {
          break;
        }
      }
    }
    var path = '';
    if (match) {
      path = '/' + targetParts.map(function (part) {
        return match.bindings[part] || part;
      }).join('/');
    }
    //no vhosts matched
    return path + req.raw_path;
  };
};

function splitHost(host) {
  return host.split('.');
}

function splitUrl(url) {
  return url.split('/').filter(function (part) {
    return part;
  });
}

function findMatch(hostHeader, vhost) {
  if (hostHeader.length !== vhost.length) {
    return;
  }
  var match = {bindings: {}};

  for (var i = 0; i < hostHeader.length; i++) {
    if (vhost[i] === '*' || vhost[i][0] === ':') {
      match.bindings[vhost[i]] = hostHeader[i];
    } else if (vhost[i] !== hostHeader[i]) {
      return;
    }
  }
  return match;
}

},{"pouchdb-route":7,"promise-nodify":2,"querystring":5}]},{},[8])(8)
});
